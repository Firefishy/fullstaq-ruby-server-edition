#!/bin/bash
set -e

SELFDIR=$(dirname "$0")
SELFDIR=$(cd "$SELFDIR" && pwd)
# shellcheck source=lib/library.sh
source "$SELFDIR/lib/library.sh"

SOURCE_PATH=
OUTPUT_PATH=
REVISION=0

function usage()
{
    echo "Usage: ./build-rbenv-rpm <OPTIONS>"
    echo "Build an Rbenv RPM package."
    echo
    echo "To find out the right value for -n:"
    echo "  bin/rbenv --version | awk '{ print \$2 }' | sed -E 's/(.+)-.*/\1/'"
    echo
    echo "Required options:"
    echo "  -s PATH     Path to Rbenv source tree"
    echo "  -o PATH     Path to output package file"
    echo "  -n VERSION  Rbenv version number without commit hash suffix"
    echo
    echo "Optional options:"
    echo "  -r REVISION Package revision number (default: $REVISION)"
    echo "  -h          Show usage"
}

function parse_options()
{
    local OPTIND=1
    local ORIG_ARGV
    local opt
    while getopts "s:o:n:r:h" opt; do
        case "$opt" in
        s)
            SOURCE_PATH=$(absolute_path "$OPTARG")
            ;;
        o)
            OUTPUT_PATH=$(absolute_path "$OPTARG")
            ;;
        n)
            VERSION="$OPTARG"
            ;;
        r)
            REVISION="$OPTARG"
            ;;
        h)
            usage
            exit
            ;;
        *)
            return 1
            ;;
        esac
    done

    (( OPTIND -= 1 )) || true
    shift $OPTIND || true
    ORIG_ARGV=("$@")

    if [[ "$SOURCE_PATH" = "" ]]; then
        echo 'ERROR: please specify an Rbenv source path with -s.' >&2
        exit 1
    fi
    if [[ ! -e "$SOURCE_PATH" ]]; then
        echo "ERROR: $SOURCE_PATH does not exist." >&2
        exit 1
    fi
    if [[ "$OUTPUT_PATH" = "" ]]; then
        echo 'ERROR: please specify an output package path with -o.' >&2
        exit 1
    fi
    if [[ "$VERSION" = "" ]]; then
        echo 'ERROR: please specify an Rbenv version with -n.' >&2
        exit 1
    fi
}

parse_options "$@"

if tty -s; then
    TTY_ARGS=(-t -i)
else
    TTY_ARGS=()
fi

IMAGE_VERSION=$(read_single_value_file "$SELFDIR/environments/utility/image_tag")
OUTPUT_TEMP_PATH=$(mktemp "$OUTPUT_PATH.XXXXXX")
create_file_if_missing "$OUTPUT_TEMP_PATH"

echo '--- Entering Docker container ---'

function _cleanup() {
    echo
    echo '--- Exited Docker container ---'
    run rm -f "$OUTPUT_TEMP_PATH"
}

verbose_run docker run --rm --init "${TTY_ARGS[@]}" \
    -v "$SELFDIR:/system:ro" \
    -v "$SOURCE_PATH:/input/rbenv:ro" \
    -v "$OUTPUT_TEMP_PATH:/output/rbenv.rpm" \
    -e "VERSION=$VERSION" \
    -e "REVISION=$REVISION" \
    --user "$(id -u):$(id -g)" \
    "ghcr.io/fullstaq-ruby/server-edition-ci-images:utility-v$IMAGE_VERSION" \
    /system/container-entrypoints/build-rbenv-rpm

function _cleanup() {
    echo '--- Exited Docker container ---'
    run mv "$OUTPUT_TEMP_PATH" "$OUTPUT_PATH"
}
